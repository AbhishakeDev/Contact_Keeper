{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CLEAR_CURRENT, CONTACT_ERROR, GET_CONTACTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        loading: false,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case FILTER_CONTACT:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CLEAR_CURRENT","CONTACT_ERROR","GET_CONTACTS","state","action","type","contacts","payload","loading","map","contact","id","current","filter","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACIA,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,YANJ,EAOIC,aAPJ,EAQIC,aARJ,EASIC,YATJ,QAUO,UAVP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKH,YAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFd;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,cAAL;AACI,aAAQ,EACJ,GAAGM,KADC;AAEJK,QAAAA,OAAO,EAAE,KAFL;AAGJF,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAAlF;AAHN,OAAR;;AAKJ,SAAKd,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHS,QAAAA,OAAO,EAAER,MAAM,CAACG;AAFb,OAAP;;AAIJ,SAAKP,aAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHS,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKjB,cAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAuBH,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAzD;AAFP,OAAP;;AAIJ,SAAKb,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFP;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKV,cAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsBH,OAAO,IAAI;AACvC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHS;AAFP,OAAP;;AAOJ,SAAKhB,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHW,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ,SAAKb,aAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG;AAFX,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AArDR;AAuDH,CAxDD","sourcesContent":["import {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n    CLEAR_CURRENT,\n    CONTACT_ERROR,\n    GET_CONTACTS\n} from '../types';\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case UPDATE_CONTACT:\n            return ({\n                ...state,\n                loading: false,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n            })\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter((contact) => contact.id !== action.payload)\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n                loading: false\n            }\n        case FILTER_CONTACT:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            }\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}