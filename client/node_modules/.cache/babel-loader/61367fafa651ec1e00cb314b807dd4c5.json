{"ast":null,"code":"var _jsxFileName = \"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CLEAR_CURRENT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","axios","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CLEAR_CURRENT","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,YANJ,EAOIC,aAPJ,QAQO,UARP;;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACK,cAAD,EAAiBU,YAAjB,CAApC,CAP0B,CAS1B;;AACA,QAAMM,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACC,EAAR,GAAarB,IAAI,EAAjB;AACAkB,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAElB,WADD;AAELmB,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAND,CAV0B,CAiB1B;;;AACA,QAAMI,aAAa,GAAGH,EAAE,IAAI;AACxBH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEjB,cADD;AAELkB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD,CAlB0B,CAwB1B;;;AACA,QAAMI,UAAU,GAAGL,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GALD,CAzB0B,CA+B1B;;;AACA,QAAMM,YAAY,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH,GAJD,CAhC0B,CAqC1B;;;AACA,QAAMiB,aAAa,GAAGP,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEf,cADD;AAELgB,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GALD,CAtC0B,CA4C1B;;;AACA,QAAMQ,cAAc,GAAGC,IAAI,IAAI;AAC3BX,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEd,cADD;AAELe,MAAAA,OAAO,EAAEM;AAFJ,KAAD,CAAR;AAIH,GALD,CA7C0B,CAmD1B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD;;AAKA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADb;AAEHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFZ;AAGHC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHb;AAIHG,MAAAA,UAJG;AAKHK,MAAAA,aALG;AAMHC,MAAAA,UANG;AAOHC,MAAAA,YAPG;AAQHC,MAAAA,aARG;AASHC,MAAAA,cATG;AAUHE,MAAAA;AAVG,KADX;AAAA,cAaKlB,KAAK,CAACmB;AAbX;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA1ED;;GAAMpB,Y;;KAAAA,Y;AA4EN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid'\nimport axios from 'axios';\n\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n    CLEAR_CURRENT\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //Add contact\n    const addContact = contact => {\n        contact.id = uuid();\n        dispatch({\n            type: ADD_CONTACT,\n            payload: contact\n        })\n    }\n    //Delete Contact\n    const deleteContact = id => {\n        dispatch({\n            type: DELETE_CONTACT,\n            payload: id\n        })\n    }\n    //Set Current Contact\n    const setCurrent = contact => {\n        dispatch({\n            type: SET_CURRENT,\n            payload: contact\n        })\n    }\n    //Clear current Contact\n    const clearCurrent = () => {\n        dispatch({\n            type: CLEAR_CURRENT\n        })\n    }\n    //Update contact\n    const updateContact = contact => {\n        dispatch({\n            type: UPDATE_CONTACT,\n            payload: contact\n        })\n    }\n    //Filter contacts\n    const filterContacts = text => {\n        dispatch({\n            type: FILTER_CONTACT,\n            payload: text\n        })\n    }\n    //Clear filter\n    const clearFilter = () => {\n        dispatch({\n            type: CLEAR_FILTER\n        })\n    }\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContacts,\n                clearFilter\n            }}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n}\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}