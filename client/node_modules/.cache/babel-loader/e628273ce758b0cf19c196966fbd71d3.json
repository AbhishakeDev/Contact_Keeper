{"ast":null,"code":"import React,{useContext,Fragment,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import ContactItem from'./ContactItem';import ContactContext from'../../context/contact/contactContext';import Spinner from'../layout/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();//eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/_jsx(\"h4\",{children:\"Please add a contact\"});}return/*#__PURE__*/_jsx(Fragment,{children:contacts!==null&&!loading?/*#__PURE__*/_jsx(TransitionGroup,{children:filtered!==null?filtered.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItem,{contact:contact,children:contact.name})},contact._id);}):contacts.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItem,{contact:contact,children:contact.name})},contact._id);})}):/*#__PURE__*/_jsx(Spinner,{})});};export default Contacts;","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","name","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,cAAc,CAAGT,UAAU,CAACM,cAAD,CAAjC,CADmB,GAGXI,CAAAA,QAHW,CAGkCD,cAHlC,CAGXC,QAHW,CAGDC,QAHC,CAGkCF,cAHlC,CAGDE,QAHC,CAGSC,WAHT,CAGkCH,cAHlC,CAGSG,WAHT,CAGsBC,OAHtB,CAGkCJ,cAHlC,CAGsBI,OAHtB,CAInBX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACH,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CACxD,mBAAO,4CAAP,CACH,CAED,mBACI,KAAC,QAAD,WACKH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACG,KAAC,eAAD,WACKF,QAAQ,GAAK,IAAb,CACGA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,qBAChB,KAAC,aAAD,EAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,uBACI,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,UAAiCA,OAAO,CAACC,IAAzC,EADJ,EAAoBD,OAAO,CAACE,GAA5B,CADgB,EAApB,CADH,CAMGR,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,qBAChB,KAAC,aAAD,EAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,uBACI,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,UAAgCA,OAAO,CAACC,IAAxC,EADJ,EAAoBD,OAAO,CAACE,GAA5B,CADgB,EAApB,CAPR,EADH,cAiBG,KAAC,OAAD,IAlBR,EADJ,CAwBH,CArCD,CAuCA,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { contacts, filtered, getContacts, loading } = contactContext;\n    useEffect(() => {\n        getContacts();\n        //eslint-disable-next-line\n    }, [])\n\n    if (contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>\n    }\n\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n                    {filtered !== null ?\n                        filtered.map(contact =>\n                            <CSSTransition key={contact._id} timeout={500} classNames=\"item\" >\n                                <ContactItem contact={contact} >{contact.name}</ContactItem>\n                            </CSSTransition>)\n                        :\n                        contacts.map(contact =>\n                            <CSSTransition key={contact._id} timeout={500} classNames=\"item\" >\n                                <ContactItem contact={contact}>{contact.name}</ContactItem>\n                            </CSSTransition>\n                        )\n                    }\n                </TransitionGroup>\n\n            ) :\n                <Spinner />\n            }\n\n        </Fragment>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}