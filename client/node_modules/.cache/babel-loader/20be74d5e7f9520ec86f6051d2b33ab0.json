{"ast":null,"code":"import _toConsumableArray from\"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,UPDATE_CONTACT,FILTER_CONTACT,CLEAR_FILTER,CLEAR_CURRENT,CONTACT_ERROR,GET_CONTACTS,CLEAR_CONTACTS}from'../types';export default(function(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{loading:false,contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;})});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;})});case CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:null,filtered:null,error:null,current:null});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case FILTER_CONTACT:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),'gi');return contact.name.match(regex)||contact.email.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CLEAR_CURRENT","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","map","contact","_id","current","filter","filtered","error","regex","RegExp","name","match","email"],"mappings":"+XAAA,OACIA,WADJ,CAEIC,cAFJ,CAGIC,WAHJ,CAIIC,cAJJ,CAKIC,cALJ,CAMIC,YANJ,CAOIC,aAPJ,CAQIC,aARJ,CASIC,YATJ,CAUIC,cAVJ,KAWO,UAXP,CAcA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAC9B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKJ,CAAAA,YAAL,CACI,sCACOE,KADP,MAEIG,QAAQ,CAAEF,MAAM,CAACG,OAFrB,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKZ,CAAAA,cAAL,CACI,sCACOO,KADP,MAEIK,OAAO,CAAE,KAFb,CAGIF,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OAA1D,EAA1B,CAHd,GAKJ,IAAKf,CAAAA,WAAL,CACI,sCACOQ,KADP,MAEIS,OAAO,CAAER,MAAM,CAACG,OAFpB,GAIJ,IAAKR,CAAAA,aAAL,CACI,sCACOI,KADP,MAEIS,OAAO,CAAE,IAFb,GAIJ,IAAKlB,CAAAA,cAAL,CACI,sCACOS,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsB,SAACH,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAApC,EAAtB,CAFd,GAIJ,IAAKL,CAAAA,cAAL,CACI,sCACOC,KADP,MAEIG,QAAQ,CAAE,IAFd,CAGIQ,QAAQ,CAAE,IAHd,CAIIC,KAAK,CAAE,IAJX,CAKIH,OAAO,CAAE,IALb,GAOJ,IAAKnB,CAAAA,WAAL,CACI,sCACOU,KADP,MAEIG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFZ,CAGIE,OAAO,CAAE,KAHb,GAKJ,IAAKX,CAAAA,cAAL,CACI,sCACOM,KADP,MAEIW,QAAQ,CAAEX,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsB,SAAAH,OAAO,CAAI,CACvC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACH,CAHS,CAFd,GAOJ,IAAKlB,CAAAA,YAAL,CACI,sCACOK,KADP,MAEIW,QAAQ,CAAE,IAFd,GAIJ,IAAKd,CAAAA,aAAL,CACI,sCACOG,KADP,MAEIY,KAAK,CAAEX,MAAM,CAACG,OAFlB,GAIJ,QACI,MAAOJ,CAAAA,KAAP,CA7DR,CA+DH,CAhED","sourcesContent":["import {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n    CLEAR_CURRENT,\n    CONTACT_ERROR,\n    GET_CONTACTS,\n    CLEAR_CONTACTS\n} from '../types';\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case UPDATE_CONTACT:\n            return ({\n                ...state,\n                loading: false,\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact)\n            })\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter((contact) => contact._id !== action.payload)\n            }\n        case CLEAR_CONTACTS:\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts],\n                loading: false\n            }\n        case FILTER_CONTACT:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            }\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}