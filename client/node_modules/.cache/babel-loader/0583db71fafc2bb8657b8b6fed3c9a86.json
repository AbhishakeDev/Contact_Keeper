{"ast":null,"code":"import _defineProperty from\"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,updateContact=contactContext.updateContact,clearCurrent=contactContext.clearCurrent,current=contactContext.current;var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();//this is just to prevent reloading of form component on submission\nif(current===null){addContact(contact);}else{updateContact(contact);}setContact({name:'',email:'',phone:'',type:'personal'});};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:current?'Edit Contact':'Add Contact'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Name\",value:name,onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email Address\",value:email,onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",placeholder:\"Phone\",value:phone,onChange:onChange}),/*#__PURE__*/_jsx(\"h5\",{children:\"Contact Type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",onChange:onChange,value:\"personal\",checked:type==='personal'}),'  ',\"Personal\",'  ',/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",onChange:onChange,value:\"professional\",checked:type==='professional'}),' ',\"Professional\",'  ',/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:current?'Update Contact':'Add Contact',className:\"btn btn-primary btn-block\"})}),current&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll,children:\"Clear\"})})]});};export default ContactForm;","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","clearCurrent","current","name","email","phone","type","contact","setContact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext);\n    const { addContact, updateContact, clearCurrent, current } = contactContext;\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n    });\n\n\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current)\n        }\n        else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'personal'\n            });\n        }\n    }, [contactContext, current]);\n\n    const { name, email, phone, type } = contact;\n    const onChange = e => setContact({\n        ...contact,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = (e) => {\n        e.preventDefault();//this is just to prevent reloading of form component on submission\n        if (current === null) {\n            addContact(contact);\n        } else {\n            updateContact(contact);\n        }\n        setContact({\n            name: '',\n            email: '',\n            phone: '',\n            type: 'personal'\n        });\n    }\n    const clearAll = () => {\n        clearCurrent();\n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={onChange} />\n            <input type=\"email\" name=\"email\" placeholder=\"Email Address\" value={email} onChange={onChange} />\n            <input type=\"text\" name=\"phone\" placeholder=\"Phone\" value={phone} onChange={onChange} />\n            <h5>Contact Type</h5>\n            <input type=\"radio\" name=\"type\" onChange={onChange} value=\"personal\" checked={type === 'personal'} />{'  '}Personal{'  '}\n            <input type=\"radio\" name=\"type\" onChange={onChange} value=\"professional\" checked={type === 'professional'} />{' '}Professional{'  '}\n            <div>\n                <input type=\"submit\" value={current ? 'Update Contact' : 'Add Contact'} className=\"btn btn-primary btn-block\" />\n            </div>\n            {current && <div>\n                <button className=\"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\n            </div>}\n        </form>\n    )\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}