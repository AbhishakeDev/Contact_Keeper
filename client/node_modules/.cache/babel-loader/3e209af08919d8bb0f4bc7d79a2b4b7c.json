{"ast":null,"code":"var _jsxFileName = \"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CLEAR_CURRENT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"Abhishek\",\n      email: \"abhi@gmail.com\",\n      phone: \"8976767676\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"Shalu\",\n      email: \"shalu@gmail.com\",\n      phone: \"5645654654645\",\n      type: \"professional\"\n    }, {\n      id: 3,\n      name: \"Aarushi\",\n      email: \"aaru@gmail.com\",\n      phone: \"324324234334\",\n      type: \"personal\"\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n  //Filter contacts\n  //Clear filter\n\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CLEAR_CURRENT","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,YANJ,EAOIC,aAPJ,QAQO,UARP;;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,UAFV;AAGIC,MAAAA,KAAK,EAAE,gBAHX;AAIIC,MAAAA,KAAK,EAAE,YAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KADM,EAQN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,OAFV;AAGIC,MAAAA,KAAK,EAAE,iBAHX;AAIIC,MAAAA,KAAK,EAAE,eAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KARM,EAeN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,SAFV;AAGIC,MAAAA,KAAK,EAAE,gBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAfM,CADO;AAwBjBC,IAAAA,OAAO,EAAE;AAxBQ,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CA5B0B,CA8B1B;;AACA,QAAMU,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACT,EAAR,GAAad,IAAI,EAAjB;AACAqB,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAEf,WADD;AAELqB,MAAAA,OAAO,EAAED;AAFJ,KAAD,CAAR;AAIH,GAND,CA/B0B,CAsC1B;;;AACA,QAAME,aAAa,GAAGX,EAAE,IAAI;AACxBO,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAEd,cADD;AAELoB,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD,CAvC0B,CA6C1B;;;AACA,QAAMY,UAAU,GAAGH,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAEb,WADD;AAELmB,MAAAA,OAAO,EAAED;AAFJ,KAAD,CAAR;AAIH,GALD,CA9C0B,CAoD1B;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGH,GAJD,CArD0B,CA0D1B;AAEA;AAEA;;;AAEA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADb;AAEHM,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFZ;AAGHG,MAAAA,UAHG;AAIHG,MAAAA,aAJG;AAKHC,MAAAA,UALG;AAMHC,MAAAA;AANG,KADX;AAAA,cASKhB,KAAK,CAACiB;AATX;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7ED;;GAAMlB,Y;;KAAAA,Y;AA+EN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid'\n\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n    CLEAR_CURRENT\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                id: 1,\n                name: \"Abhishek\",\n                email: \"abhi@gmail.com\",\n                phone: \"8976767676\",\n                type: \"personal\"\n            },\n            {\n                id: 2,\n                name: \"Shalu\",\n                email: \"shalu@gmail.com\",\n                phone: \"5645654654645\",\n                type: \"professional\"\n            },\n            {\n                id: 3,\n                name: \"Aarushi\",\n                email: \"aaru@gmail.com\",\n                phone: \"324324234334\",\n                type: \"personal\"\n            }\n        ],\n        current: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //Add contact\n    const addContact = contact => {\n        contact.id = uuid();\n        dispatch({\n            type: ADD_CONTACT,\n            payload: contact\n        })\n    }\n    //Delete Contact\n    const deleteContact = id => {\n        dispatch({\n            type: DELETE_CONTACT,\n            payload: id\n        })\n    }\n    //Set Current Contact\n    const setCurrent = contact => {\n        dispatch({\n            type: SET_CURRENT,\n            payload: contact\n        })\n    }\n    //Clear current Contact\n    const clearCurrent = () => {\n        dispatch({\n            type: CLEAR_CURRENT\n        })\n    }\n    //Update contact\n\n    //Filter contacts\n\n    //Clear filter\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent\n            }}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n}\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}