{"ast":null,"code":"var _jsxFileName = \"/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CLEAR_CURRENT, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add contact\n\n  const addContact = async contact => {\n    const config = {\n      header: {\n        'Config-Type': 'application/js'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      error: state.error,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/abhishektripathi/Documents/React_by_Brad/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CLEAR_CURRENT","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","header","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER,\n    CLEAR_CURRENT,\n    CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //Add contact\n    const addContact = async contact => {\n        const config = {\n            header: {\n                'Config-Type': 'application/js'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n\n            dispatch({\n                type: ADD_CONTACT,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type: CONTACT_ERROR,\n                payload: err.response.msg\n            })\n        }\n\n    }\n    //Delete Contact\n    const deleteContact = id => {\n        dispatch({\n            type: DELETE_CONTACT,\n            payload: id\n        })\n    }\n    //Set Current Contact\n    const setCurrent = contact => {\n        dispatch({\n            type: SET_CURRENT,\n            payload: contact\n        })\n    }\n    //Clear current Contact\n    const clearCurrent = () => {\n        dispatch({\n            type: CLEAR_CURRENT\n        })\n    }\n    //Update contact\n    const updateContact = contact => {\n        dispatch({\n            type: UPDATE_CONTACT,\n            payload: contact\n        })\n    }\n    //Filter contacts\n    const filterContacts = text => {\n        dispatch({\n            type: FILTER_CONTACT,\n            payload: text\n        })\n    }\n    //Clear filter\n    const clearFilter = () => {\n        dispatch({\n            type: CLEAR_FILTER\n        })\n    }\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                error: state.error,\n                current: state.current,\n                filtered: state.filtered,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContacts,\n                clearFilter\n            }}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n}\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}